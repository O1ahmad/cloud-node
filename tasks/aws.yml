---
- name: Create a security group
  amazon.aws.ec2_security_group:
    name: "{{ security_group_name }}"
    description: "{{ security_group_description }}"
    region: "{{ cloud_location }}"
    rules: "{{ ingress_ports }}"
    state: present
  register: security_group

- name: Create an AWS SSH key pair if not defined
  amazon.aws.ec2_key:
    name: "default-keypair"
    region: "{{ cloud_location }}"
    state: present
  register: aws_keypair
  when: ssh_public_key is undefined

- name: Save AWS SSH private key
  ansible.builtin.copy:
    content: "{{ aws_keypair.key.private_key }}"
    dest: "~/.ssh/default-keypair.pem"
    mode: '0600'
  when: ssh_public_key is undefined

- name: Set AWS SSH keypair variable
  ansible.builtin.set_fact:
    ssh_public_key: "{{ aws_keypair.key.name }}"
  when: ssh_public_key is undefined

- name: Get the current spot price for the instance type
  ansible.builtin.command: >
    aws ec2 describe-spot-price-history
      --region {{ cloud_location }}
      --instance-types {{ instance_type }}
      --product-descriptions {{ instance_os | default("Linux/UNIX") }}
      --query "SpotPriceHistory[0].SpotPrice"
  register: spot_price_command
  when: preemptible | bool and spot_price is not defined

- name: Set the spot price fact
  ansible.builtin.set_fact:
    spot_price: "{{ spot_price_command.stdout }}"
  when: preemptible | bool and spot_price is not defined

- name: Create an EC2 instance
  block:
    - name: Create an on-demand EC2 instance
      amazon.aws.ec2_instance:
        name: "{{ instance_name }}"
        instance_type: "{{ instance_type }}"
        region: "{{ cloud_location }}"
        image_id: "{{ instance_image }}"
        security_groups:
          - default
          - "{{ security_group.group_id }}"
        wait: "{{ wait_for_ssh | bool }}"
        key_name: "{{ ssh_public_key }}"
        tags:
          Name: "{{ instance_tag }}"
        volumes:
          - device_name: /dev/sda1
            ebs:
              volume_size: "{{ storage_size }}"
        network:
          assign_public_ip: "{{ public_ip }}"
      register: ec2
      when: not preemptible | bool

    - name: Create a preemptible EC2 spot instance
      amazon.aws.ec2_spot_instance:
        count: 1
        region: "{{ cloud_location }}"
        spot_price: "{{ spot_price }}"
        launch_specification:
          instance_type: "{{ instance_type }}"
          image_id: "{{ instance_image }}"
          key_name: "{{ ssh_public_key }}"
          security_groups:
            - default
            - "{{ security_group.group_id }}"
          block_device_mappings:
            - device_name: /dev/sda1
              ebs:
                volume_size: "{{ storage_size }}"
        tags:
          Name: "{{ instance_tag }}"
      register: ec2_spot
      when: preemptible | bool

    - name: Set unified EC2 variable for spot instance
      set_fact:
        ec2:
          instances:
            - public_ip_address: "{{ ec2_spot.instances[0].public_ip }}"
      when: preemptible | bool

- name: Wait for the instance to be reachable via SSH
  ansible.builtin.wait_for:
    host: "{{ ec2.instances[0].public_ip_address }}"
    port: 22
    delay: 10
    timeout: 320
    state: started
  when: wait_for_ssh | bool

- name: Add instance to inventory
  ansible.builtin.add_host:
    name: "{{ ec2.instances[0].public_ip_address }}"
    groups: "{{ instance_tag }}"
    ansible_host: "{{ ec2.instances[0].public_ip_address }}"
    ansible_user: "{{ cloud_user }}"
    ansible_ssh_private_key_file: "{{ ssh_private_key_path }}"
